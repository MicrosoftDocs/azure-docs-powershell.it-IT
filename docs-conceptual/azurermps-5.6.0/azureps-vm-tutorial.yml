### YamlMime:Tutorial
title: Creare macchine virtuali con Azure PowerShell
metadata:
  title: Creare macchine virtuali con Azure PowerShell
  description: Introduzione ad Azure PowerShell tramite la creazione di macchine virtuali.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 02/08/2018
  ms.author: sewhee
  author: sdwheeler
  manager: carmonm
  ms.devlang: azure-powershell
  ms.technology: azure
  ms.openlocfilehash: bb5024927da7888dca406a522fa39dfe225afb89
  ms.sourcegitcommit: 20af779cd523c758d40e23d60eb989a4ef982d5c
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 03/15/2018
items:
- durationInMinutes: 1
  content: "In questa esercitazione si apprenderanno tutti i passaggi necessari per la configurazione di una macchina virtuale con Azure PowerShell. L'esercitazione illustra anche le query di output, il riutilizzo delle risorse di Azure e la pulizia delle risorse.\n\nQuesta esercitazione può essere completata con l'esperienza interattiva disponibile tramite Azure Cloud Shell oppure è possibile [installare Azure PowerShell](install-azurerm-ps.md) in locale.\n\nUsare __CTRL+MAIUSC+V__ (__CMD+MAIUSC+V__ in macOS) per incollare il testo dell'esercitazione in Azure Cloud Shell."
- durationInMinutes: 1
  title: Accesso
  content: "Se si usa un'installazione locale di Azure PowerShell è necessario accedere prima di eseguire altri passaggi.\n\n```powershell\nLogin-AzureRmAccount\n```\n\nCompletare la procedura di accesso seguendo le istruzioni visualizzate nel terminale."
- durationInMinutes: 1
  title: Creare un gruppo di risorse
  content: "In Azure tutte le risorse vengono allocate in un gruppo di gestione delle risorse. I gruppi di risorse offrono raggruppamenti logici di risorse che ne rendono più semplice l'uso come raccolta.\nPer questa esercitazione, tutte le risorse create vengono inserite in un unico gruppo denominato `TutorialResources`.\n\n```powershell\nNew-AzureRmResourceGroup -Name TutorialResources -Location eastus\n```\n\n```Output\nResourceGroupName : TutorialResources\nLocation          : eastus\nProvisioningState : Succeeded\nTags              :\nResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources\n```"
- durationInMinutes: 1
  title: Creare le credenziali di amministratore per la macchina virtuale
  content: "Per potere creare una nuova macchina virtuale, è prima di tutto necessario creare un oggetto credenziali contenente il nome utente e la password per l'account amministratore della macchina virtuale Windows.\n\n```powershell\n$cred = Get-Credential -Message \"Enter a username and password for the virtual machine.\"\n```\n\nQuando richiesto, immettere il nome utente e la password. L'oggetto credenziali risultate viene passato come parametro nel passaggio successivo.\n\n```Output\nWindows PowerShell credential request.\nEnter a username and password for the virtual machine.\nUser: tutorAdmin\nPassword for user tutorAdmin: *********\n```"
- durationInMinutes: 4
  title: Creare una macchina virtuale
  content: "Le macchine virtuali in Azure hanno un numero elevato di dipendenze. Azure PowerShell crea automaticamente tali risorse in base agli argomenti della riga di comando specificati. Per migliorare la leggibilità viene usato lo [splatting di PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) per passare i parametri ai cmdlet di Azure PowerShell.\n\nCreare una nuova macchina virtuale che esegue Windows.\n\n```powershell\n$vmParams = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM1'\n  Location = 'eastus'\n  ImageName = 'Win2016Datacenter'\n  PublicIpAddressName = 'tutorialPublicIp'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM1 = New-AzureRmVM @vmParams\n```\nQuando viene creata la macchina virtuale, vengono visualizzati i valori dei parametri usati e le risorse di Azure create.\nIn PowerShell verrà visualizzato un indicatore di stato, come mostrato di seguito.\n\n```Output\n Creating Azure resources\n  39% \\\n  [ooooooooooooooooooooooooooooooooooo                                                                 ]\n\n  Creating TutorialVM1 virtual machine.\n```\n\nAl termine della creazione della macchina virtuale, è possibile visualizzare i risultati nel portale di Azure o controllando la variabile \\$newVM1.\n\n```powershell\n$newVM1\n```\n\n```Output\nResourceGroupName : TutorialResources\nId                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1\nVmId              : 12345678-9abc-def0-1234-56789abcedf0\nName              : TutorialVM1\nType              : Microsoft.Compute/virtualMachines\nLocation          : eastus\nTags              : {}\nHardwareProfile   : {VmSize}\nNetworkProfile    : {NetworkInterfaces}\nOSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState : Succeeded\nStorageProfile    : {ImageReference, OsDisk, DataDisks}\n```\n\nI valori delle proprietà elencati all'interno di parentesi graffe sono oggetti annidati. Nel passaggio successivo verrà illustrato come visualizzare valori specifici in tali oggetti annidati."
- durationInMinutes: 5
  title: Ottenere informazioni sulla VM con le query
  content: "È possibile ottenere informazioni più dettagliate dalla macchina virtuale appena creata. In questo esempio vengono verificati il nome della macchina virtuale e l'account amministratore creato.\n\n```powershell\n$newVM1.OSProfile | Select-Object ComputerName,AdminUserName\n```\n\n```Output\nComputerName AdminUsername\n------------ -------------\nTutorialVM1  tutorialAdmin\n```\n\nÈ possibile usare altri comandi di Azure PowerShell per ottenere informazioni specifiche sulla configurazione di rete.\n\n```powershell\n$newVM1 | Get-AzureRmNetworkInterface |\n  Select-Object -ExpandProperty IpConfigurations |\n    Select-Object Name,PrivateIpAddress\n```\n\nIn questo esempio viene usata la pipeline di PowerShell per inviare l'oggetto \\$newVM1 al cmdlet `Get-AzureRmNetworkInterface`. Dall'oggetto interfaccia di rete risultante viene selezionato l'oggetto IpConfigurations annidato. Dall'oggetto IpConfigurations vengono selezionate le proprietà Name e PrivateIpAddress.\n\n```Output\nName        PrivateIpAddress\n----        ----------------\nTutorialVM1 192.168.1.4\n```\n\nPer assicurarsi che la macchina virtuale sia in esecuzione, è necessario connettersi tramite Desktop remoto. A questo scopo, è necessario conoscere l'indirizzo IP pubblico.\n\n```powershell\n$publicIp = Get-AzureRmPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources\n\n$publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}\n```\n\nIn questo esempio viene usato `Get-AzureRmPublicIpAddress` e i risultati vengono archiviati nella variabile \\$publicIp. Da questa variabile vengono selezionate le proprietà e viene usata un'espressione per il recupero della proprietà Fqdn annidata.\n\n```Output\nName             IpAddress           FQDN\n----             ---------           ----\ntutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com\n```\n\nDal computer locale è possibile eseguire il comando seguente per la connessione alla macchina virtuale tramite Desktop remoto.\n\n```powershell\nmstsc.exe /v <PUBLIC_IP_ADDRESS>\n```\n\nPer altre informazioni sull'esecuzione di query per le proprietà dell'oggetto, vedere [Query per le risorse di Azure](./queries-azureps.md)."
- durationInMinutes: 4
  title: Creazione di una nuova macchina virtuale nella subnet esistente
  content: "La seconda VM usa la subnet esistente.\n\n```powershell\n$vm2Params = @{\n  ResourceGroupName = 'TutorialResources'\n  Name = 'TutorialVM2'\n  ImageName = 'Win2016Datacenter'\n  VirtualNetworkName = 'TutorialVM1'\n  SubnetName = 'TutorialVM1'\n  PublicIpAddressName = 'tutorialPublicIp2'\n  Credential = $cred\n  OpenPorts = 3389\n}\n$newVM2 = New-AzureRmVM @vm2Params\n\n$newVM2\n```\n\n```Output\nResourceGroupName        : TutorialResources\nId                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2\nVmId                     : 12345678-9abc-def0-1234-56789abcedf1\nName                     : TutorialVM2\nType                     : Microsoft.Compute/virtualMachines\nLocation                 : eastus\nTags                     : {}\nHardwareProfile          : {VmSize}\nNetworkProfile           : {NetworkInterfaces}\nOSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}\nProvisioningState        : Succeeded\nStorageProfile           : {ImageReference, OsDisk, DataDisks}\nFullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com\n```\n\nÈ possibile ignorare alcuni passaggi per ottenere l'indirizzo IP pubblico della nuova macchina virtuale perché viene restituito nella proprietà FullyQualifiedDomainName dell'oggetto \\$newVM2. Usare il comando seguente per connettersi tramite Desktop remoto.\n\n```powershell\nmstsc.exe /v $newVM2.FullyQualifiedDomainName\n```"
- durationInMinutes: 4
  title: Pulizia
  content: "Ora che è stata completata l'esercitazione, eseguire la pulizia delle risorse create. È possibile eliminare le singole risorse con il comando `Remove-AzureRmResource`, ma il modo più sicuro per rimuovere tutte le risorse in un gruppo di risorse consiste nell'eliminare il gruppo tramite il comando `Remove-AzureRmResourceGroup`.\n\n```powershell\n$job = Remove-AzureRmResourceGroup -Name TutorialResources -Force -AsJob\n\n$job\n```\n\n```Output\nId     Name            PSJobTypeName   State         HasMoreData     Location             Command\n--     ----            -------------   -----         -----------     --------             -------\n1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzureRmResource...\n```\n\nQuesto comando elimina le risorse create durante l'esercitazione e le dealloca nell'ordine corretto. Il parametro `-AsJob` impedisce a PowerShell di bloccarsi durante l'eliminazione. Per attendere fino al completamento dell'eliminazione, usare il comando seguente:\n\n```powershell\nWait-Job -Id $job.Id\n```\n\nDopo aver completato la pulizia, l'esercitazione è terminata. Proseguire con un riepilogo di tutte le nozioni apprese e i collegamenti a risorse utili per i passaggi successivi."
- durationInMinutes: 1
  title: Summary
  content: "\nCongratulazioni! Si è appreso come creare macchine virtuali con risorse nuove o esistenti e come usare espressioni e altri comandi di Azure PowerShell per acquisire dati da archiviare nelle variabili shell. Sono state anche esaminate alcune delle risorse create per le macchine virtuali di Azure.\n\nI passaggi successivi dipendono da dal modo in cui si prevede di usare Azure PowerShell. Sono disponibili molti documenti che offrono maggiori dettagli sulle funzionalità descritte in questa esercitazione.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentazione dettagliata di Azure PowerShell\n\nÈ consigliabile esaminare il set completo della [documentazione di Azure PowerShell](overview.md).\n\nPer altre informazioni sui comandi usati in questa esercitazione, vedere gli articoli seguenti.\n\n- [New-AzureRmResourceGroup](/powershell/module/azurerm.resources/new-azurermresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzureRmVM](/powershell/module/azurerm.compute/new-azurermvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzureRmPublicIpAddress](/powershell/module/azurerm.network/get-AzureRmPublicIpAddress)\n- [Remove-AzureRmResourceGroup](/powershell/module/azurerm.resources/Remove-AzureRmResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nSono anche disponibili argomenti che approfondiscono le funzionalità descritte nell'esercitazione.\n\n- [Splatting di PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Query](queries-azureps.md)\n- [Formattazione](formatting-output.md)\n- [Uso dei processi di PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Script di esempio\n\nSe si vuole iniziare subito con attività specifiche, esaminare alcuni script di esempio.\n\n- [Macchine virtuali Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Macchine virtuali Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [App Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Database SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Commenti e suggerimenti\n\nSono disponibili molti modi per inviare commenti, suggerimenti o domande.\n\n* `Send-Feedback` è un comando incorporato per Azure PowerShell che consente di inviare commenti e suggerimenti in formato libero al team.\n* Inviare una richiesta di funzionalità o un report sui bug nel [repository di Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Porre una domanda o ottenere chiarimenti inviando un problema nel [repository relativo alla documentazione di Azure PowerShell](https://github.com/Azure/azure-docs-powershell/issues).\n\nMicrosoft auspica che l'uso di Azure PowerShell sia un'esperienza gradevole per l'utente."
