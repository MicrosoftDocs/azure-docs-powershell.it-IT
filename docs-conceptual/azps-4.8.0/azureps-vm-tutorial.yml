### YamlMime:Tutorial
title: Creare macchine virtuali con Azure PowerShell
metadata:
  title: Creare macchine virtuali con Azure PowerShell
  description: Introduzione ad Azure PowerShell tramite la creazione di macchine virtuali.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 12/13/2018
  ms.author: mirobb
  author: mikefrobbins
  manager: barbkess
  ms.devlang: azure-powershell
  ms.prod: powershell
  ms.technology: azure-powershell
  ms.topic: tutorial
  clicktale: true
  ms.openlocfilehash: f0a86f5eb970528bd4119f8487f724745a6e044c
  ms.sourcegitcommit: 1de2b6c3c99197958fa2101bc37680e7507f91ac
  ms.translationtype: HT
  ms.contentlocale: it-IT
  ms.lasthandoff: 10/13/2020
  ms.locfileid: "92002020"
items:
- durationInMinutes: 1
  content: >-
    In questa esercitazione si apprenderanno tutti i passaggi necessari per la configurazione di una macchina virtuale con Azure PowerShell. L'esercitazione illustra anche le query di output, il riutilizzo delle risorse di Azure e la pulizia delle risorse.


    Questa esercitazione può essere completata con l'esperienza interattiva disponibile tramite Azure Cloud Shell oppure è possibile [installare Azure PowerShell](install-az-ps.md) in locale.


    Usare **CTRL+MAIUSC+V** (**CMD+MAIUSC+V** in macOS) per incollare il testo dell'esercitazione in Azure Cloud Shell.
- durationInMinutes: 1
  title: Accesso
  content: >-
    Se si usa un'installazione locale di Azure PowerShell è necessario accedere prima di eseguire altri passaggi.


    ```powershell-interactive

    Connect-AzAccount

    ```


    Completare la procedura di accesso seguendo le istruzioni visualizzate nel terminale.
- durationInMinutes: 1
  title: Creare un gruppo di risorse
  content: >-
    In Azure tutte le risorse vengono allocate in un gruppo di gestione delle risorse. I gruppi di risorse offrono raggruppamenti logici di risorse che ne rendono più semplice l'uso come raccolta.

    Per questa esercitazione, tutte le risorse create vengono inserite in un unico gruppo denominato `TutorialResources`.


    ```powershell-interactive

    New-AzResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Creare le credenziali di amministratore per la macchina virtuale
  content: >-
    Per potere creare una nuova macchina virtuale, è prima di tutto necessario creare un oggetto credenziali contenente il nome utente e la password per l'account amministratore della macchina virtuale Windows.


    ```powershell-interactive

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Quando richiesto, immettere il nome utente e la password. L'oggetto credenziali risultate viene passato come parametro nel passaggio successivo.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: Creare una macchina virtuale
  content: >-
    Le macchine virtuali in Azure hanno un numero elevato di dipendenze. Azure PowerShell crea automaticamente tali risorse in base agli argomenti della riga di comando specificati. Per migliorare la leggibilità viene usato lo [splatting di PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) per passare i parametri ai cmdlet di Azure PowerShell.


    Creare una nuova macchina virtuale che esegue Windows.


    ```powershell-interactive

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzVM @vmParams

    ```

    Quando viene creata la macchina virtuale, vengono visualizzati i valori dei parametri usati e le risorse di Azure create.

    In PowerShell verrà visualizzato un indicatore di stato, come mostrato di seguito.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Al termine della creazione della macchina virtuale, è possibile visualizzare i risultati nel portale di Azure o controllando la variabile \$newVM1.


    ```powershell-interactive

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    I valori delle proprietà elencati all'interno di parentesi graffe sono oggetti annidati. Nel passaggio successivo verrà illustrato come visualizzare valori specifici in tali oggetti annidati.
- durationInMinutes: 5
  title: Ottenere informazioni sulla VM con le query
  content: >-
    È possibile ottenere informazioni più dettagliate dalla macchina virtuale appena creata. In questo esempio vengono verificati il nome della macchina virtuale e l'account amministratore creato.


    ```powershell-interactive

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    È possibile usare altri comandi di Azure PowerShell per ottenere informazioni specifiche sulla configurazione di rete.


    ```powershell-interactive

    $newVM1 | Get-AzNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    In questo esempio viene usata la pipeline di PowerShell per inviare l'oggetto \$newVM1 al cmdlet `Get-AzNetworkInterface`. Dall'oggetto interfaccia di rete risultante viene selezionato l'oggetto IpConfigurations annidato. Dall'oggetto IpConfigurations vengono selezionate le proprietà Name e PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Per assicurarsi che la macchina virtuale sia in esecuzione, è necessario connettersi tramite Desktop remoto. A questo scopo, è necessario conoscere l'indirizzo IP pubblico.


    ```powershell-interactive

    $publicIp = Get-AzPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    In questo esempio viene usato `Get-AzPublicIpAddress` e i risultati vengono archiviati nella variabile \$publicIp. Da questa variabile vengono selezionate le proprietà e viene usata un'espressione per il recupero della proprietà Fqdn annidata.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    Dal computer locale è possibile eseguire il comando seguente per la connessione alla macchina virtuale tramite Desktop remoto.


    ```powershell-interactive

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Per altre informazioni sull'esecuzione di query per le proprietà dell'oggetto, vedere [Query per le risorse di Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Creazione di una nuova macchina virtuale nella subnet esistente
  content: >-
    La seconda VM usa la subnet esistente.


    ```powershell-interactive

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    È possibile ignorare alcuni passaggi per ottenere l'indirizzo IP pubblico della nuova macchina virtuale perché viene restituito nella proprietà FullyQualifiedDomainName dell'oggetto \$newVM2. Usare il comando seguente per connettersi tramite Desktop remoto.


    ```powershell-interactive

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Pulizia
  content: >-
    Ora che è stata completata l'esercitazione, eseguire la pulizia delle risorse create. È possibile eliminare le singole risorse con il comando `Remove-AzResource`, ma il modo più sicuro per rimuovere tutte le risorse in un gruppo di risorse consiste nell'eliminare il gruppo tramite il comando `Remove-AzResourceGroup`.


    ```powershell-interactive

    $job = Remove-AzResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzResource...

    ```


    Questo comando elimina le risorse create durante l'esercitazione e le dealloca nell'ordine corretto. Il parametro `-AsJob` impedisce a PowerShell di bloccarsi durante l'eliminazione. Per attendere fino al completamento dell'eliminazione, usare il comando seguente:


    ```powershell-interactive

    Wait-Job -Id $job.Id

    ```


    Dopo aver completato la pulizia, l'esercitazione è terminata. Proseguire con un riepilogo di tutte le nozioni apprese e i collegamenti a risorse utili per i passaggi successivi.
- durationInMinutes: 1
  title: Summary
  content: "\nCongratulazioni! Si è appreso come creare macchine virtuali con risorse nuove o esistenti e come usare espressioni e altri comandi di Azure PowerShell per acquisire dati da archiviare nelle variabili shell. Sono state anche esaminate alcune delle risorse create per le macchine virtuali di Azure.\n\nI passaggi successivi dipendono da dal modo in cui si prevede di usare Azure PowerShell. Sono disponibili molti documenti che offrono maggiori dettagli sulle funzionalità descritte in questa esercitazione.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentazione dettagliata di Azure PowerShell\n\nÈ consigliabile esaminare il set completo della [documentazione di Azure PowerShell](/powershell/azure/new-azureps-module-az?view=azps-4.1.0).\n\nPer altre informazioni sui comandi usati in questa esercitazione, vedere gli articoli seguenti.\n\n- [New-AzResourceGroup](/powershell/module/Az.resources/new-Azresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzVM](/powershell/module/Az.compute/new-Azvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzPublicIpAddress](/powershell/module/Az.network/get-AzPublicIpAddress)\n- [Remove-AzResourceGroup](/powershell/module/Az.resources/Remove-AzResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nSono anche disponibili argomenti che approfondiscono le funzionalità descritte nell'esercitazione.\n\n- [Splatting di PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Query](queries-azureps.md)\n- [Formattazione](formatting-output.md)\n- [Uso dei processi di PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Script di esempio\n\nSe si vuole iniziare subito con attività specifiche, esaminare alcuni script di esempio.\n\n- [Macchine virtuali Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Macchine virtuali Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [App Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Database SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Cosmos DB](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Commenti e suggerimenti\n\nSono disponibili molti modi per inviare commenti, suggerimenti o domande.\n\n* `Send-Feedback` è un comando incorporato per Azure PowerShell che consente di inviare commenti e suggerimenti in formato libero al team.\n* Inviare una richiesta di funzionalità o un report sui bug nel [repository di Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Porre una domanda o ottenere chiarimenti inviando un problema nel [repository relativo alla documentazione di Azure PowerShell](https://github.com/MicrosoftDocs/azure-docs-powershell/issues).\n\nMicrosoft auspica che l'uso di Azure PowerShell sia un'esperienza gradevole per l'utente."
